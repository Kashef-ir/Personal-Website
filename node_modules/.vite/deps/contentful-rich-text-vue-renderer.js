import {
  h
} from "./chunk-FIAHBV72.js";
import {
  __commonJS,
  __require,
  __toESM
} from "./chunk-PR4QN5HX.js";

// node_modules/@contentful/rich-text-types/dist/blocks.js
var require_blocks = __commonJS({
  "node_modules/@contentful/rich-text-types/dist/blocks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BLOCKS = void 0;
    var BLOCKS2;
    (function(BLOCKS3) {
      BLOCKS3["DOCUMENT"] = "document";
      BLOCKS3["PARAGRAPH"] = "paragraph";
      BLOCKS3["HEADING_1"] = "heading-1";
      BLOCKS3["HEADING_2"] = "heading-2";
      BLOCKS3["HEADING_3"] = "heading-3";
      BLOCKS3["HEADING_4"] = "heading-4";
      BLOCKS3["HEADING_5"] = "heading-5";
      BLOCKS3["HEADING_6"] = "heading-6";
      BLOCKS3["OL_LIST"] = "ordered-list";
      BLOCKS3["UL_LIST"] = "unordered-list";
      BLOCKS3["LIST_ITEM"] = "list-item";
      BLOCKS3["HR"] = "hr";
      BLOCKS3["QUOTE"] = "blockquote";
      BLOCKS3["EMBEDDED_ENTRY"] = "embedded-entry-block";
      BLOCKS3["EMBEDDED_ASSET"] = "embedded-asset-block";
      BLOCKS3["EMBEDDED_RESOURCE"] = "embedded-resource-block";
      BLOCKS3["TABLE"] = "table";
      BLOCKS3["TABLE_ROW"] = "table-row";
      BLOCKS3["TABLE_CELL"] = "table-cell";
      BLOCKS3["TABLE_HEADER_CELL"] = "table-header-cell";
    })(BLOCKS2 || (exports.BLOCKS = BLOCKS2 = {}));
  }
});

// node_modules/@contentful/rich-text-types/dist/inlines.js
var require_inlines = __commonJS({
  "node_modules/@contentful/rich-text-types/dist/inlines.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.INLINES = void 0;
    var INLINES2;
    (function(INLINES3) {
      INLINES3["ASSET_HYPERLINK"] = "asset-hyperlink";
      INLINES3["EMBEDDED_ENTRY"] = "embedded-entry-inline";
      INLINES3["EMBEDDED_RESOURCE"] = "embedded-resource-inline";
      INLINES3["ENTRY_HYPERLINK"] = "entry-hyperlink";
      INLINES3["HYPERLINK"] = "hyperlink";
      INLINES3["RESOURCE_HYPERLINK"] = "resource-hyperlink";
    })(INLINES2 || (exports.INLINES = INLINES2 = {}));
  }
});

// node_modules/@contentful/rich-text-types/dist/marks.js
var require_marks = __commonJS({
  "node_modules/@contentful/rich-text-types/dist/marks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MARKS = void 0;
    var MARKS2;
    (function(MARKS3) {
      MARKS3["BOLD"] = "bold";
      MARKS3["ITALIC"] = "italic";
      MARKS3["UNDERLINE"] = "underline";
      MARKS3["CODE"] = "code";
      MARKS3["SUPERSCRIPT"] = "superscript";
      MARKS3["SUBSCRIPT"] = "subscript";
      MARKS3["STRIKETHROUGH"] = "strikethrough";
    })(MARKS2 || (exports.MARKS = MARKS2 = {}));
  }
});

// node_modules/@contentful/rich-text-types/dist/schemaConstraints.js
var require_schemaConstraints = __commonJS({
  "node_modules/@contentful/rich-text-types/dist/schemaConstraints.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    var _a;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.V1_MARKS = exports.V1_NODE_TYPES = exports.TEXT_CONTAINERS = exports.HEADINGS = exports.CONTAINERS = exports.VOID_BLOCKS = exports.TABLE_BLOCKS = exports.LIST_ITEM_BLOCKS = exports.TOP_LEVEL_BLOCKS = void 0;
    var blocks_1 = require_blocks();
    var inlines_1 = require_inlines();
    var marks_1 = require_marks();
    exports.TOP_LEVEL_BLOCKS = [
      blocks_1.BLOCKS.PARAGRAPH,
      blocks_1.BLOCKS.HEADING_1,
      blocks_1.BLOCKS.HEADING_2,
      blocks_1.BLOCKS.HEADING_3,
      blocks_1.BLOCKS.HEADING_4,
      blocks_1.BLOCKS.HEADING_5,
      blocks_1.BLOCKS.HEADING_6,
      blocks_1.BLOCKS.OL_LIST,
      blocks_1.BLOCKS.UL_LIST,
      blocks_1.BLOCKS.HR,
      blocks_1.BLOCKS.QUOTE,
      blocks_1.BLOCKS.EMBEDDED_ENTRY,
      blocks_1.BLOCKS.EMBEDDED_ASSET,
      blocks_1.BLOCKS.EMBEDDED_RESOURCE,
      blocks_1.BLOCKS.TABLE
    ];
    exports.LIST_ITEM_BLOCKS = [
      blocks_1.BLOCKS.PARAGRAPH,
      blocks_1.BLOCKS.HEADING_1,
      blocks_1.BLOCKS.HEADING_2,
      blocks_1.BLOCKS.HEADING_3,
      blocks_1.BLOCKS.HEADING_4,
      blocks_1.BLOCKS.HEADING_5,
      blocks_1.BLOCKS.HEADING_6,
      blocks_1.BLOCKS.OL_LIST,
      blocks_1.BLOCKS.UL_LIST,
      blocks_1.BLOCKS.HR,
      blocks_1.BLOCKS.QUOTE,
      blocks_1.BLOCKS.EMBEDDED_ENTRY,
      blocks_1.BLOCKS.EMBEDDED_ASSET,
      blocks_1.BLOCKS.EMBEDDED_RESOURCE
    ];
    exports.TABLE_BLOCKS = [
      blocks_1.BLOCKS.TABLE,
      blocks_1.BLOCKS.TABLE_ROW,
      blocks_1.BLOCKS.TABLE_CELL,
      blocks_1.BLOCKS.TABLE_HEADER_CELL
    ];
    exports.VOID_BLOCKS = [
      blocks_1.BLOCKS.HR,
      blocks_1.BLOCKS.EMBEDDED_ENTRY,
      blocks_1.BLOCKS.EMBEDDED_ASSET,
      blocks_1.BLOCKS.EMBEDDED_RESOURCE
    ];
    exports.CONTAINERS = (_a = {}, _a[blocks_1.BLOCKS.OL_LIST] = [blocks_1.BLOCKS.LIST_ITEM], _a[blocks_1.BLOCKS.UL_LIST] = [blocks_1.BLOCKS.LIST_ITEM], _a[blocks_1.BLOCKS.LIST_ITEM] = exports.LIST_ITEM_BLOCKS, _a[blocks_1.BLOCKS.QUOTE] = [blocks_1.BLOCKS.PARAGRAPH], _a[blocks_1.BLOCKS.TABLE] = [blocks_1.BLOCKS.TABLE_ROW], _a[blocks_1.BLOCKS.TABLE_ROW] = [blocks_1.BLOCKS.TABLE_CELL, blocks_1.BLOCKS.TABLE_HEADER_CELL], _a[blocks_1.BLOCKS.TABLE_CELL] = [blocks_1.BLOCKS.PARAGRAPH, blocks_1.BLOCKS.UL_LIST, blocks_1.BLOCKS.OL_LIST], _a[blocks_1.BLOCKS.TABLE_HEADER_CELL] = [blocks_1.BLOCKS.PARAGRAPH], _a);
    exports.HEADINGS = [
      blocks_1.BLOCKS.HEADING_1,
      blocks_1.BLOCKS.HEADING_2,
      blocks_1.BLOCKS.HEADING_3,
      blocks_1.BLOCKS.HEADING_4,
      blocks_1.BLOCKS.HEADING_5,
      blocks_1.BLOCKS.HEADING_6
    ];
    exports.TEXT_CONTAINERS = __spreadArray([blocks_1.BLOCKS.PARAGRAPH], exports.HEADINGS, true);
    exports.V1_NODE_TYPES = [
      blocks_1.BLOCKS.DOCUMENT,
      blocks_1.BLOCKS.PARAGRAPH,
      blocks_1.BLOCKS.HEADING_1,
      blocks_1.BLOCKS.HEADING_2,
      blocks_1.BLOCKS.HEADING_3,
      blocks_1.BLOCKS.HEADING_4,
      blocks_1.BLOCKS.HEADING_5,
      blocks_1.BLOCKS.HEADING_6,
      blocks_1.BLOCKS.OL_LIST,
      blocks_1.BLOCKS.UL_LIST,
      blocks_1.BLOCKS.LIST_ITEM,
      blocks_1.BLOCKS.HR,
      blocks_1.BLOCKS.QUOTE,
      blocks_1.BLOCKS.EMBEDDED_ENTRY,
      blocks_1.BLOCKS.EMBEDDED_ASSET,
      inlines_1.INLINES.HYPERLINK,
      inlines_1.INLINES.ENTRY_HYPERLINK,
      inlines_1.INLINES.ASSET_HYPERLINK,
      inlines_1.INLINES.EMBEDDED_ENTRY,
      "text"
    ];
    exports.V1_MARKS = [marks_1.MARKS.BOLD, marks_1.MARKS.CODE, marks_1.MARKS.ITALIC, marks_1.MARKS.UNDERLINE];
  }
});

// node_modules/@contentful/rich-text-types/dist/types.js
var require_types = __commonJS({
  "node_modules/@contentful/rich-text-types/dist/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@contentful/rich-text-types/dist/nodeTypes.js
var require_nodeTypes = __commonJS({
  "node_modules/@contentful/rich-text-types/dist/nodeTypes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@contentful/rich-text-types/dist/emptyDocument.js
var require_emptyDocument = __commonJS({
  "node_modules/@contentful/rich-text-types/dist/emptyDocument.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EMPTY_DOCUMENT = void 0;
    var blocks_1 = require_blocks();
    exports.EMPTY_DOCUMENT = {
      nodeType: blocks_1.BLOCKS.DOCUMENT,
      data: {},
      content: [
        {
          nodeType: blocks_1.BLOCKS.PARAGRAPH,
          data: {},
          content: [
            {
              nodeType: "text",
              value: "",
              marks: [],
              data: {}
            }
          ]
        }
      ]
    };
  }
});

// node_modules/@contentful/rich-text-types/dist/helpers.js
var require_helpers = __commonJS({
  "node_modules/@contentful/rich-text-types/dist/helpers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isInline = isInline;
    exports.isBlock = isBlock;
    exports.isText = isText;
    var blocks_1 = require_blocks();
    var inlines_1 = require_inlines();
    function hasValue(obj, value) {
      for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {
        var key = _a[_i];
        if (value === obj[key]) {
          return true;
        }
      }
      return false;
    }
    function isInline(node) {
      return hasValue(inlines_1.INLINES, node.nodeType);
    }
    function isBlock(node) {
      return hasValue(blocks_1.BLOCKS, node.nodeType);
    }
    function isText(node) {
      return node.nodeType === "text";
    }
  }
});

// node_modules/@contentful/rich-text-types/dist/schemas/index.js
var require_schemas = __commonJS({
  "node_modules/@contentful/rich-text-types/dist/schemas/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getSchemaWithNodeType = getSchemaWithNodeType;
    function getSchemaWithNodeType(nodeType) {
      try {
        return __require("./generated/".concat(nodeType, ".json"));
      } catch (error) {
        throw new Error('Schema for nodeType "'.concat(nodeType, '" was not found.'));
      }
    }
  }
});

// node_modules/@contentful/rich-text-types/dist/index.js
var require_dist = __commonJS({
  "node_modules/@contentful/rich-text-types/dist/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getSchemaWithNodeType = exports.helpers = exports.EMPTY_DOCUMENT = exports.MARKS = exports.INLINES = exports.BLOCKS = void 0;
    var blocks_1 = require_blocks();
    Object.defineProperty(exports, "BLOCKS", { enumerable: true, get: function() {
      return blocks_1.BLOCKS;
    } });
    var inlines_1 = require_inlines();
    Object.defineProperty(exports, "INLINES", { enumerable: true, get: function() {
      return inlines_1.INLINES;
    } });
    var marks_1 = require_marks();
    Object.defineProperty(exports, "MARKS", { enumerable: true, get: function() {
      return marks_1.MARKS;
    } });
    __exportStar(require_schemaConstraints(), exports);
    __exportStar(require_types(), exports);
    __exportStar(require_nodeTypes(), exports);
    var emptyDocument_1 = require_emptyDocument();
    Object.defineProperty(exports, "EMPTY_DOCUMENT", { enumerable: true, get: function() {
      return emptyDocument_1.EMPTY_DOCUMENT;
    } });
    var helpers2 = __importStar(require_helpers());
    exports.helpers = helpers2;
    var schemas_1 = require_schemas();
    Object.defineProperty(exports, "getSchemaWithNodeType", { enumerable: true, get: function() {
      return schemas_1.getSchemaWithNodeType;
    } });
  }
});

// node_modules/contentful-rich-text-vue-renderer/dist/index.esm.js
var import_rich_text_types = __toESM(require_dist());
var defaultInline = (type, node, key) => {
  return h(
    "span",
    {
      key,
      style: {
        margin: "0px 5px",
        padding: "0 .25rem 0 .75rem",
        border: "1px solid #d3dce0",
        fontFamily: "monospace"
      }
    },
    `inline: ${type}, sys.id: ${node.data.target.sys.id}`
  );
};
var defaultMarkRenderers = {
  [import_rich_text_types.MARKS.BOLD]: (children, key) => h("strong", { key }, children),
  [import_rich_text_types.MARKS.ITALIC]: (children, key) => h("em", { key }, children),
  [import_rich_text_types.MARKS.UNDERLINE]: (children, key) => h("u", { key }, children),
  [import_rich_text_types.MARKS.CODE]: (children, key) => h("code", { key }, children),
  [import_rich_text_types.MARKS.SUPERSCRIPT]: (children, key) => h("sup", { key }, children),
  [import_rich_text_types.MARKS.SUBSCRIPT]: (children, key) => h("sub", { key }, children),
  [import_rich_text_types.MARKS.STRIKETHROUGH]: (children, key) => h("s", { key }, children)
};
var defaultNodeRenderers = {
  [import_rich_text_types.BLOCKS.PARAGRAPH]: (node, key, next) => h("p", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.HEADING_1]: (node, key, next) => h("h1", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.HEADING_2]: (node, key, next) => h("h2", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.HEADING_3]: (node, key, next) => h("h3", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.HEADING_4]: (node, key, next) => h("h4", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.HEADING_5]: (node, key, next) => h("h5", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.HEADING_6]: (node, key, next) => h("h6", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.EMBEDDED_ENTRY]: (node, key, next) => h("div", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.UL_LIST]: (node, key, next) => h("ul", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.OL_LIST]: (node, key, next) => h("ol", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.LIST_ITEM]: (node, key, next) => h("li", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.QUOTE]: (node, key, next) => h("blockquote", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.TABLE]: (node, key, next) => h("table", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.TABLE_ROW]: (node, key, next) => h("tr", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.TABLE_CELL]: (node, key, next) => h("td", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.TABLE_HEADER_CELL]: (node, key, next) => h("th", { key }, next(node.content, key, next)),
  [import_rich_text_types.BLOCKS.HR]: (_node, key) => h("hr", { key }),
  [import_rich_text_types.INLINES.ASSET_HYPERLINK]: (node, key) => defaultInline(import_rich_text_types.INLINES.ASSET_HYPERLINK, node, key),
  [import_rich_text_types.INLINES.ENTRY_HYPERLINK]: (node, key) => defaultInline(import_rich_text_types.INLINES.ENTRY_HYPERLINK, node, key),
  [import_rich_text_types.INLINES.EMBEDDED_ENTRY]: (node, key) => defaultInline(import_rich_text_types.INLINES.EMBEDDED_ENTRY, node, key),
  [import_rich_text_types.INLINES.HYPERLINK]: (node, key, next) => {
    return h(
      "a",
      {
        key,
        href: node.data.uri
      },
      next(node.content, key, next)
    );
  },
  text: ({ marks, value }, key, markRenderer) => {
    if (!marks.length) {
      return value;
    }
    const marksReversed = [...marks].reverse();
    return marksReversed.reduce(
      (aggregate, mark, i) => markRenderer[mark.type]([aggregate], `${key}-${i}`, h),
      value
    );
  }
};
var renderNodeList = (nodes, key, renderer) => {
  return nodes.map((node, i) => renderNode(node, `${key}-${i}`, renderer));
};
var renderNode = (node, key, renderer) => {
  const nodeRenderer = renderer.node;
  if (import_rich_text_types.helpers.isText(node)) {
    const markerRender = renderer.mark;
    return nodeRenderer.text(node, key, markerRender);
  } else {
    const nextNode = (nodes) => renderNodeList(nodes, key, renderer);
    if (!nodeRenderer) {
      return h("div", { key }, `${key} ;lost nodeRenderer`);
    }
    if (!node.nodeType || !nodeRenderer[node.nodeType]) {
      return h(
        "div",
        { key },
        "(Unrecognized node type) " + (node.nodeType || "empty")
      );
    }
    return nodeRenderer[node.nodeType](node, key, nextNode);
  }
};
var RichText = ({ nodeRenderers, markRenderers, document }) => {
  if (!document) {
    console.warn("No document given to RichText renderer");
    return [];
  }
  const renderer = {
    node: {
      ...defaultNodeRenderers,
      ...nodeRenderers
    },
    mark: {
      ...defaultMarkRenderers,
      ...markRenderers
    }
  };
  return renderNodeList(document.content, "RichText-", renderer);
};
RichText.props = ["document", "nodeRenderers", "markRenderers"];
export {
  RichText as default
};
//# sourceMappingURL=contentful-rich-text-vue-renderer.js.map
